/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.google.protobuf" version "0.8.5"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.google.experimental.examples.kotlin"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        // TODO: find a better way than excluding this here
        exclude 'META-INF/main.kotlin_module'
    }
    sourceSets {
        test.java.srcDirs += "${project.buildDir}/generated/source/protoTest/debugUnitTest/client"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // temporary
    implementation 'com.github.googleapis.gax-kotlin:kgax-grpc:132f3f5'
    //implementation 'com.google.kgax:kgax-grpc:0.1.0'

    // TODO: provide a gRPC-fallback example
    //implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    //implementation 'com.squareup.retrofit2:converter-protobuf:2.4.0'

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'org.awaitility:awaitility:3.1.1'
    androidTestImplementation 'org.awaitility:awaitility-kotlin:3.1.1'

    ktlint "com.github.shyiko:ktlint:0.27.0"
}

// compile proto and generate gRPC stubs
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
        client {
            //artifact = 'com.google.api:generator:0.1.0:core@jar'
            artifact = 'com.github.googleapis:gapic-generator-kotlin:c957593:core@jar'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
                client {
                    option "source=${projectDir}/src/main/proto"
                    option "test_output=${project.buildDir}/generated/source/protoTest/debugUnitTest/client"
                    //option "test_output=${projectDir}/src/test/java"
                    //option "fallback"
                }
            }
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/main/**/*.kt"
}
check.dependsOn ktlint
